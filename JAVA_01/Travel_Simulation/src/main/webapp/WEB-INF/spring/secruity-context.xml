<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 접근제한 페이지  -->
	<bean id="customAccessDenied" 
		class="a.a.a.security.CustomAccessDeniedHandler"></bean>
		
	<!-- 패스워드 인코딩 -->	
	<!-- <bean id="customPasswordEncoder" 
		class="a.a.a.security.CustomNoOpPasswordEncoder"></bean> -->
		
	<!-- 패스워드 암호화 -->	
	<bean id="bcryptPasswordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
		
	<!-- 로그인 성공시 반응 -->
	<bean id="customLoginSuccess"
		class="a.a.a.security.CustomLoginSuccessHandler"></bean>	
		
		
		
	<security:http>
		<security:intercept-url pattern="/login.do" access="isAnonymous()" />
		<security:intercept-url pattern="/admin*.do" access="hasRole('ROLE_ADMIN')" />

		
		<security:intercept-url pattern="/main.do" access="permitAll"/>
		<security:intercept-url pattern="/insertFB.do" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/board.do" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/updateFB.do" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/lookup.do" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		
		<!-- <security:form-login></security:form-login> -->
		<security:form-login login-page="/login.do" default-target-url="/main.do" authentication-success-handler-ref="customLoginSuccess" />
		<security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/main.do" />
		
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			
			<security:jdbc-user-service data-source-ref="dataSourceSpied"
				users-by-username-query="SELECT M_ID AS userName, M_PW AS password, ENABLED 
					FROM MEMBERSHIP WHERE M_ID=?"
				authorities-by-username-query="SELECT M_ID AS userName, AUTHORITY 
					FROM MEMBERSHIP WHERE M_ID=?" />
					
			<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
					
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
