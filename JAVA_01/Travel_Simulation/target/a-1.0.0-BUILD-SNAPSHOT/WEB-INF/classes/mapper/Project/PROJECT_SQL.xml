<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project">
		
	<!--  기본 메뉴 검색  -->	
	
	<select id="getList" parameterType="hashmap" resultType="hashmap">
	
		<![CDATA[
		SELECT * FROM(
			SELECT 
				PRV_SEQ
				, M_ID
				, PRV_TITLE
				, PRV_IMG
				, PRV_IMGFOLDER
				, PRV_OPENCHK
				, PRV_VIEWS
				, PRV_HASHTAG
			FROM PRV_REVIEW
	    	WHERE PRV_DELETECHK = 'N'
	    	ORDER BY PRV_VIEWS DESC
		)
		WHERE ROWNUM < 5
		
		
		]]>
	</select>
	
	
	<update id="updateViewCnt" parameterType="hashmap">
		
		UPDATE PRV_REVIEW
   			SET PRV_VIEWS = PRV_VIEWS + 1
    	WHERE PRV_SEQ = #{rbseq}
		
	</update>
	
	
	<insert id="insertnewcontent" parameterType="hashmap" >
				
		INSERT INTO REVIEW_BOARD (
					RB_SEQ
					, RB_TITLE
					, M_ID
					, RB_CONTENT
					, RB_CATEGORY
					, RB_CREATEDATE
					, RB_UPDATEDATE
					, RB_DELETECHK
					, RB_OPENCHK
					, PRB_BNO)
			
			VALUES (
					(SELECT NVL(MAX(RB_SEQ)+1, 0) FROM REVIEW_BOARD)
					, #{title}
					, #{writer}
					, #{content}
					, #{category}
					, SYSDATE
					, SYSDATE
					, 'N'
					, #{openchk}
					, '1'
		)
	
	</insert>
	
	<update id="updatecontent" parameterType="hashmap">
		
		UPDATE BOARD
			SET
				TITLE = #{updatetitle}
				, CONTENT = #{updatecontent}
				, WRITER = #{updatewriter}
				, UPDATEDATE = SYSDATE
			WHERE BNO = #{updatebno}
		
			
	</update>
	
	<delete id="deletecontent" parameterType="hashmap">
		
		DELETE 
			FROM BOARD
			WHERE BNO = #{removebno}
	
	</delete>
	
	<select id="selectinquirepost" parameterType="hashmap" resultType="hashmap">
		
		SELECT BNO
			 , TITLE
		     , CONTENT
		     , WRITER
		     , TO_CHAR(REGDATE, 'YYYY/MM/DD') REGDATE
		     , TO_CHAR(UPDATEDATE, 'YYYY/MM/DD') UPDATEDATE
		  FROM REVIEW_BOARD
		  WHERE BNO = #{bno}
		
	</select>
	
	
	<select id="selectseq" resultType ="int">
	
		SELECT 
			NVL(MAX(RB_SEQ)+1, 0) 
		FROM 
			REVIEW_BOARD
	</select>
	
	
	
	
	
	<select id="selectwriterslist" parameterType="hashmap" resultType="hashmap">
		
		SELECT BNO
			 , TITLE
		     , CONTENT
		     , WRITER
		     , TO_CHAR(REGDATE, 'YYYY/MM/DD') REGDATE
		     , TO_CHAR(UPDATEDATE, 'YYYY/MM/DD') UPDATEDATE
		  FROM BOARD
		  WHERE WRITER = #{writer}
		   ORDER BY BNO DESC
		
	</select>
	
	
	
	<select id="selectlistNum" parameterType="hashmap" resultType="hashmap">
		
		SELECT BNO
			, TITLE
			, CONTENT
			, WRITER
			, TO_CHAR(REGDATE, 'YYYY/MM/DD') REGDATE
		    , TO_CHAR(UPDATEDATE, 'YYYY/MM/DD') UPDATEDATE
		FROM (
    			SELECT BNO
				, TITLE
				, CONTENT
				, WRITER
				, TO_CHAR(REGDATE, 'YYYY/MM/DD') REGDATE
		    	, TO_CHAR(UPDATEDATE, 'YYYY/MM/DD') UPDATEDATE
		    	, ROW_NUMBER() OVER(ORDER BY BNO DESC) AS rNum
		    FROM BOARD
		    		) MP
     
		WHERE rNum BETWEEN #{rnummin} AND #{rnummax}
		ORDER BY BNO DESC
		
	</select>
	
	
	<select id="getBoardLisCnt" resultType ="int">
	
		SELECT
			COUNT(*) AS listCNT
		FROM 
			REVIEW_BOARD
	</select>
	
	
	
	<select id="getChkFileCnt" resultType ="int">
	
		SELECT COUNT(*)
	    FROM REVIEW_BOARD B
	        , BOARD_FILE F
	    WHERE B.RB_SEQ = F.RB_SEQ
	    AND B.RB_SEQ = #{rbseq}
	    
	</select>
	
	<select id="getFileInfo" parameterType="hashmap" resultType="hashmap">
	
		SELECT F_ORI_NAME
			, F_UUID_NAME
			, F_URL
			, F_CREATEDATE
		FROM BOARD_FILE
		WHERE RB_SEQ = #{rbseq}
	
	</select>
	

	
	
	
	
	<insert id="inserttag" parameterType="hashmap" >
				
		INSERT INTO TAG (
					TAG_SEQ
					, TAGNAME)
			
			VALUES (
					#{rbseq}
					, #{tag}
		)
	
	</insert>
	
	<delete id="deletetag" parameterType="hashmap">
		
		DELETE 
			FROM TAG
			WHERE TAG_SEQ = #{rbseq}
	
	</delete>
	
	
	<select id="gettag" parameterType="hashmap" resultType="hashmap">
	
		SELECT *
			FROM TAG
			WHERE TAG_SEQ = #{rbseq}
		
	</select>
	

	<select id="selecthotelinfo" parameterType="hashmap" resultType="hashmap">
		SELECT *
		  FROM HOTELLOCATION
	</select>

<insert id="uploadfiles" parameterType="hashmap" >
				
		INSERT INTO BOARD_FILE (
					F_SEQ
					, RB_SEQ
					, F_ORI_NAME
					, F_UUID_NAME
					, F_URL
					, F_SIZE
					, F_CREATEDATE
					, F_DELETECHK)
			
			VALUES (
					(SELECT NVL(MAX(F_SEQ)+1, 0) FROM BOARD_FILE)
					, #{rbseq}
					, #{filenameorg}
					, #{filenameuuid}
					, #{fileurl}
					, #{filesize}
					, SYSDATE
					, 'N'
		)
	
	</insert>
	
	<delete id="deleteimg" parameterType="hashmap">
		
		DELETE 
			FROM BOARD_FILE
			WHERE F_SEQ = #{fileSeq}
	
	</delete>
	
	
	
	
	
	
	<select id="selectseqperplan" parameterType="hashmap" resultType="hashmap">
	
		SELECT NVL(MAX(RT_SEQ_PERPLAN)+1, 0) NEXTVAL
    		FROM REVIEW_ROUTE 
   			WHERE M_ID = #{mid}
		
	</select>
	
	
	
	
	<insert id="insertRoute" parameterType="hashmap" >
				
		INSERT INTO REVIEW_ROUTE (
					RT_SEQ
					, M_ID
					, RT_SEQ_PERPLAN
					, RT_DEP_LAT
					, RT_DEP_LNG
					, RT_WAYPO_LAT
					, RT_WAYPO_LNG
					, RT_ARR_LAT
					, RT_ARR_LNG
					, RB_SEQ
			)
			VALUES (
					(SELECT NVL(MAX(RT_SEQ)+1, 0) FROM REVIEW_ROUTE)
					, #{mid}
					, #{rtseqperplan}
					, #{rtdeplat}
					, #{rtdeplng}
					, #{rtwaypolat}
					, #{rtwaypolng}
					, #{rtarrlat}
					, #{rtarrlng}
					, #{rbseq}
			)
	
	</insert>
	
	<select id="selectRoute" parameterType="hashmap" resultType="hashmap">
		
		SELECT RT_SEQ 
        	, RT_DEP_LAT
        	, RT_DEP_LNG
        	, RT_ARR_LAT
        	, RT_ARR_LNG
        	, RT_WAYPO_LAT
        	, RT_WAYPO_LNG
        	, RT_SEQ_PERPLAN
        	, RB_SEQ
    	FROM REVIEW_ROUTE
    	WHERE RT_SEQ_PERPLAN = #{rtseqperplan}
    	ORDER BY RT_SEQ ASC
		
	</select>
	
	
	
	<delete id="deleteBookmarkRoute" parameterType="hashmap">
		
		DELETE 
			FROM BOOKMARK_ROUTE
			WHERE BM_RT_SEQ = #{bmrtseq}
			AND M_ID = #{mid}
	
	</delete>
	
	
	<select id="selectbookmarkseq" parameterType="hashmap" resultType="hashmap">
	
		SELECT NVL(MAX(BM_RT_SEQ)+1, 0) NEXTVAL
    		FROM BOOKMARK_ROUTE 
   			WHERE M_ID = #{mid}
		
	</select>
	
	<insert id="insertBookmark" parameterType="hashmap" >
				
		INSERT INTO BOOKMARK_ROUTE (
					BM_SEQ
					, BM_NICK
					, M_ID
					, BM_RT_SEQ
					, BM_RT_DEP_LAT
					, BM_RT_DEP_LNG
					, BM_RT_WAYPO_LAT
					, BM_RT_WAYPO_LNG
					, BM_RT_ARR_LAT
					, BM_RT_ARR_LNG
			)
			VALUES (
					(SELECT NVL(MAX(BM_SEQ)+1, 0) FROM BOOKMARK_ROUTE)
					, #{bmnick}
					, #{mid}
					, #{bmrtseq}
					, #{bmdeplat}
					, #{bmdeplng}
					, #{bmwaypolat}
					, #{bmwaypolng}
					, #{bmarrlat}
					, #{bmarrlng}
			)
	
	</insert>
	
	<select id="selectBMRoute1" parameterType="hashmap" resultType="hashmap">
	
		SELECT BM_RT_SEQ
    	FROM BOOKMARK_ROUTE
    	WHERE M_ID = #{mid}
    	GROUP BY BM_RT_SEQ
    	ORDER BY BM_RT_SEQ ASC
	
	</select>
	
	
	<select id="selectBMRoute2" parameterType="hashmap" resultType="hashmap">
	
		SELECT BM_SEQ
			, BM_NICK
			, BM_RT_SEQ
        	, BM_RT_DEP_LAT
        	, BM_RT_DEP_LNG
        	, BM_RT_ARR_LAT
        	, BM_RT_ARR_LNG
        	, BM_RT_WAYPO_LAT
        	, BM_RT_WAYPO_LNG
    	FROM BOOKMARK_ROUTE
    	WHERE M_ID = #{mid}
    	AND BM_RT_SEQ = #{bmrtseq}
    	ORDER BY BM_RT_SEQ ASC
	
	</select>
	
	
	
	
	<insert id="insertTravelRoute" parameterType="hashmap" >
				
		INSERT INTO TRAVEL_ROUTE_RB (
					TR_SEQ
					, RB_SEQ
					, RT_SEQ_PERPLAN
					, M_ID
					, TR_DAY
			)
			VALUES (
					(SELECT NVL(MAX(TR_SEQ)+1, 0) FROM TRAVEL_ROUTE_RB)
					, #{rbseq}
					, #{rtseqperplan}
					, #{mid}
					, #{trday}
			)
	
	</insert>
	
	<select id="selectRouteTR" parameterType="hashmap" resultType="hashmap">
		
		SELECT R.RT_SEQ 
        	, R.RT_DEP_LAT
        	, R.RT_DEP_LNG
        	, R.RT_ARR_LAT
        	, R.RT_ARR_LNG
        	, R.RT_WAYPO_LAT
        	, R.RT_WAYPO_LNG
        	, R.RT_SEQ_PERPLAN
        	, R.RB_SEQ
            , T.TR_DAY
    	FROM REVIEW_ROUTE R, TRAVEL_ROUTE_RB T
    	WHERE R.RT_SEQ_PERPLAN = T.RT_SEQ_PERPLAN
        AND T.RB_SEQ = #{rbseq}
        AND T.TR_DAY = #{trday}
    	ORDER BY R.RT_SEQ ASC
		
	</select>
	
	<select id="getMaxTrday" parameterType="hashmap" resultType="hashmap">
	
		SELECT 
        	 R.RT_SEQ_PERPLAN
        	, R.RB_SEQ
            , T.TR_DAY
    	FROM REVIEW_ROUTE R, TRAVEL_ROUTE_RB T
    	WHERE R.RT_SEQ_PERPLAN = T.RT_SEQ_PERPLAN
        AND T.RB_SEQ = #{rbseq}
    	ORDER BY T.TR_DAY DESC
	
	</select>
	
	<select id="getListfromTag" parameterType="hashmap" resultType="hashmap">
	
		SELECT P.PRV_SEQ
            , P.PRV_TITLE
            , P.PRV_IMG
            , P.PRV_OPENCHK
            , P.PRV_IMGFOLDER
            , P.M_ID
        FROM PRV_REVIEW P, TAG T
        WHERE P.PRV_SEQ = T.TAG_SEQ
        AND T.TAGNAME = #{tagname}
        ORDER BY P.PRV_SEQ DESC
	
	
	</select>
	
	
	
	
</mapper>